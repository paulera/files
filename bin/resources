#!/bin/bash

__gr="\033[1;32m"
__re="\033[1;31m"
__ye="\033[1;33m"
__wh="\033[1;37m"
__ga="\033[1;30m"
__bk="\033[0;30m"
__="\033[0m"

__bgr="\033[42m"
__bre="\033[41m"
__bye="\033[43m"

say() {
    echo -ne "$1${__}"
}

make_bar() {
    TOTAL_TICKS=20
    LIMIT_1=10
    LIMIT_2=15
    INTVALUE=${1%.*}
    TICKS=$(( $TOTAL_TICKS * $INTVALUE / 100 ))
    say "${__wh}["
    for i in $(seq 1 $TOTAL_TICKS); do
        if (( $i > $TICKS )); then echo -ne "${__ga}."; continue;
        elif (( $i < $LIMIT_1 )); then COLOR=${__gr};
        elif (( $i < $LIMIT_2 )); then COLOR=${__ye};
        else COLOR=${__re};
        fi
        say "${COLOR}|"
    done
    say "${__wh}]"
}

if [ "$OS" == "mac" ]; then
    MEM_TOTAL=$(sysctl -n hw.memsize | awk '{print $1 / 1024 / 1024}')
    MEM_FREE=$(vm_stat | awk '/Pages free/ {print $3 * 4096 / 1024 / 1024}')
    MEM_USED=$(echo "$MEM_TOTAL - $MEM_FREE" | bc)
    MEM_USED_PERC=$(echo "100 * $MEM_USED / $MEM_TOTAL" | bc)
else
    # *nix / gnu based
    read -r MEM_TOTAL MEM_USED MEM_FREE <<< $(free -m -h | awk 'NR==2 { print $2, $3, $4 }')
    MEM_USED_PERC=$(free -m | awk 'NR==2 { printf "%.2f", 100*$3/$2 }')
fi
say "Memory $(make_bar ${MEM_USED_PERC}) ${__ga}${MEM_USED_PERC}% ($MEM_USED out of $MEM_TOTAL)"

echo ""

read -r SWAP_TOTAL SWAP_USED SWAP_FREE <<< $(free -m -h | awk 'NR==3 { print $2, $3, $4 }')
SWAP_USED_PERC=$(free -m | awk 'NR==3 { printf "%.2f", 100*$3/$2 }')
say "Swap   $(make_bar ${SWAP_USED_PERC}) ${__ga}${SWAP_USED_PERC}% ($SWAP_USED out of $SWAP_TOTAL)"

echo ""

read -r DISK_TOTAL DISK_USED DISK_FREE <<< $(df -h | awk '$NF=="/" { print $2,$3,$4,$5 }')
DISK_USED_PERC=$(df | awk '$NF=="/" { printf "%.2f", 100*$3/$2 }')
say "Disk   $(make_bar ${DISK_USED_PERC}) ${__ga}${DISK_USED_PERC}% (${DISK_USED} out of ${DISK_TOTAL})"

echo ""

# NOT WORKING
# CHECK https://www.idnt.net/en-US/kb/941772
get_cpus_idle_and_sum() {
    cat /proc/stat | grep 'cpu[0-9]\+' | awk '{$1=""; print $5, $1+$2+$3+$4+$5+$6+$7+$8+$9+$10}'
}


CPU_INFO1=($(get_cpus_idle_and_sum))
sleep 1
CPU_INFO2=($(get_cpus_idle_and_sum))
CPU_INFO_COUNT=${#CPU_INFO1[@]}
for i in $(seq 0 2 $(( $CPU_INFO_COUNT - 2 ))); do
    CPU_IDLE_DELTA=$(( CPU_INFO2[$i] - CPU_INFO1[$i] ))
    CPU_SUM_DELTA=$(( CPU_INFO2[$i+1] - CPU_INFO1[$i+1] ))
    CPU_WORK_DELTA=$(( CPU_SUM_DELTA - CPU_IDLE_DELTA ))
    CPU_BUSY_PERC=$(( 100 * CPU_WORK_DELTA / CPU_SUM_DELTA ))
    printf "CPU%-2s  " $(( i/2 ))
    say "$(make_bar ${CPU_BUSY_PERC}) ${__ga}${CPU_BUSY_PERC}%\n"
done

