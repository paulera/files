#!/bin/bash

usage() {
    echo "Usage: $(basename $0) [reference branch]"
    echo ""
    echo "Compares the current git branch to the reference branch, showing"
    echo "which commits behind or after (explanation below)"
    echo
    echo "Options:"
    echo "    --help                Display this help"
    echo "    [reference branch]    Default: main. The branch to compare to"
    echo ""                         
    echo "Understand the output:"
    echo "    \"behind\" = commit in the reference branch which you don't have"
    echo "    \"ahead\" = your commit, ahead the reference branch"
}

if [ "$1" == "--help" ]; then
    usage
    exit 0
fi

CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [ "${CURRENT_BRANCH}" = "" ]; then
    echo "Not a git repo"
    exit 1
fi

MAIN_BRANCH_NAME=$(git config --get branch.master.merge | awk -F/ '{ print $3; }')
if [ -z "$MAIN_BRANCH_NAME" ]; then
    MAIN_BRANCH_NAME="main"
fi
COMPARE_BRANCH="origin/${MAIN_BRANCH_NAME}"

if [ ! -z "$1" ]; then
    COMPARE_BRANCH="$1"
fi

printf "\nThe local branch ${cCyan}${CURRENT_BRANCH}${c0} is\n\n"

red=$'\033[1;31m'
green=$'\033[1;32m'
nc=$'\033[0m'

BEHIND=$(git rev-list --oneline ${CURRENT_BRANCH}..${COMPARE_BRANCH} --count)
printf "  Behind ${cCyan}${COMPARE_BRANCH}${c0} by ${cRed}${BEHIND} commits${c0}:\n"
git rev-list --oneline ${CURRENT_BRANCH}..${COMPARE_BRANCH} | sed "s/^/${red}    [-]${nc} /g"
echo

AHEAD=$(git rev-list --oneline ${COMPARE_BRANCH}..${CURRENT_BRANCH} --count)
printf "  Ahead of ${cCyan}${COMPARE_BRANCH}${c0} by ${cGreen}${AHEAD} commits${c0}:\n"
git rev-list --oneline ${COMPARE_BRANCH}..${CURRENT_BRANCH} | sed "s/^/${green}    [+]${nc} /g"

echo
